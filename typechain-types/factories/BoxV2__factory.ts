/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BoxV2, BoxV2Interface } from "../BoxV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610236806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec1146100465780636057361d14610064578063d09de08a14610080575b600080fd5b61004e61008a565b60405161005b919061013f565b60405180910390f35b61007e60048036038101906100799190610107565b610093565b005b6100886100d4565b005b60008054905090565b806000819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100c9919061013f565b60405180910390a150565b6100f060016100e161008a565b6100eb919061015a565b610093565b565b600081359050610101816101e9565b92915050565b60006020828403121561011957600080fd5b6000610127848285016100f2565b91505092915050565b610139816101b0565b82525050565b60006020820190506101546000830184610130565b92915050565b6000610165826101b0565b9150610170836101b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101a5576101a46101ba565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6101f2816101b0565b81146101fd57600080fd5b5056fea2646970667358221220412e553bbd17939e9b852923bfc9ef3aeec249642dd8d0ebf14a6257b4bd05f064736f6c63430008040033";

type BoxV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoxV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoxV2__factory extends ContractFactory {
  constructor(...args: BoxV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoxV2> {
    return super.deploy(overrides || {}) as Promise<BoxV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BoxV2 {
    return super.attach(address) as BoxV2;
  }
  override connect(signer: Signer): BoxV2__factory {
    return super.connect(signer) as BoxV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoxV2Interface {
    return new utils.Interface(_abi) as BoxV2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BoxV2 {
    return new Contract(address, _abi, signerOrProvider) as BoxV2;
  }
}
